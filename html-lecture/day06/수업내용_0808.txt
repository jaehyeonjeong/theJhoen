compile vs interpreting

complie : 프로그래밍 언어를 컴퓨터가 알아들을 수 있게 만든다.
-> java
interpreting : 실시간으로 기계어로 바꿔줌 오류 없는데 까지 내려가다가 오류를 발견하면 멈춤
-> javascript

display : flex -> 부모 자식관계에서만 

display: flex 옵션은 블록 테그들을 row 형태로 보여줌 단 부모 클래스 휘하의 자식 클래스만 적용됨
justify-content: 옵션은 설정에 따라 휘하 자식의 테그들의 간격을 정할 수 있다.
.item-list {
    display: flex;
    // row가 디폴트(기본값)
    flex-direction: row;
    // 메인 엑시스(row), 크로스 엑시스(column)
    gap: 20px; // 사이가 벌어짐, 간격 띄우기
    justify-content: space-between; // start가 기본값 end: 오른쪽 맨끝, center: 중앙
    // space-around는 간격이 일정하고 페이지에 맞게 사용 : 왼쪽 끝, 오른쪽 끝의 공백이 다른것들과 다르다.
    // space-evenly는 균등한 간격을 무조건 일정하게 갖는다.
    // space-between은 양옆 페이지에 간격을 없애고 그 사이의 간격을 일정하게 유지
  }

flex에서 부모와 자식이 사용되는 컨텐츠들의 차이점 및 사용되는 컨텐츠들의 항목
  .container {
  // 부모한테 적용되는 옵션들
  // 너비를 따로 지원하지 않아서 자기가 가질 수 있는 최소 넓이만 가질수있다.
  display: flex;
  //flex-direction: row-reverse; // 잘 쓰지 않음
  padding: 30px;
  //flex-wrap: wrap; // no wrap이 디폴트 wrap을 하면 줄바꿈해서 그안에 포개진다.
  // width: 100vw;
  //width: 300px;
  height: 500px;
  border: 3px solid black;
  background-color: red;
  justify-content: start;
  flex-direction: row;
  // Stretch 는 억지로 cross를 늘려서 height를 맞춤 (디폴트)
  align-items: start;
  //align-content: space-between; // wrap이 적용될 때만 사용가능
  // 두줄이상에서 적용, 컨텐츠들이 부모안에 다 옆으로 넣어지지 않을때
  .item {
    padding: 30px;
    border: 5px solid #000000;
    background-color: aqua;
    // // width랑 flex-basis를 둘다 풀면 width가 우선순위이기 때문에 둘다 쓰지 않는다.
    // width: 50px;
    flex-basis: 50px;
    flex-basis: 200px;
    //flex-grow: 1; //여백을 매워줌
    flex-shrink: 1;
  }
  // .item01 {
  //   // 여백을 키우는 건 grow;
  //   // 줄이는건 shrink
  //   flex-grow: 5;
  // }
  // .item02 {
  //   flex-grow: 3;
  // }
  // .item03 {
  //   flex-grow: 2;
  // }

  wrap-reverse로 wrap한 요소를 reverse함.
}

https://d2.naver.com/helloworld/8540176 네이버 레이아웃

다음 시간에는 grid 하는 방법에 대해서 알아보려고 함. grid scss mixin

https://docs.emmet.io/cheat-sheet/ 단축키 입력 예시